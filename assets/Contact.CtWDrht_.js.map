{"version":3,"file":"Contact.CtWDrht_.js","sources":["../../src/components/Contact/Contact.jsx"],"sourcesContent":["import React, { useEffect, useState, useCallback, useMemo } from 'react';\nimport AOS from 'aos';\nimport 'aos/dist/aos.css';\n\nexport default function Contact() {\n  // Initialize AOS animation library\n  useEffect(() => {\n    AOS.init({ duration: 1300 });\n  }, []);\n\n  // Form state management\n  const [formData, setFormData] = useState({\n    fullName: '',\n    email: '',\n    phoneNumber: '',\n    subject: '',\n    message: '',\n  });\n  \n  // UI state management\n  const [success, setSuccess] = useState(false);\n  const [loading, setLoading] = useState(false);\n  const [errors, setErrors] = useState({});\n\n  // Form validation\n  const validateForm = useCallback(() => {\n    const newErrors = {};\n    \n    if (!formData.fullName.trim()) {\n      newErrors.fullName = 'Full name is required';\n    }\n    \n    if (!formData.email.trim()) {\n      newErrors.email = 'Email is required';\n    } else if (!/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(formData.email)) {\n      newErrors.email = 'Please enter a valid email';\n    }\n    \n    if (!formData.subject.trim()) {\n      newErrors.subject = 'Subject is required';\n    }\n    \n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  }, [formData]);\n\n  // Optimized event handlers with useCallback\n  const handleChange = useCallback((e) => {\n    const { name, value } = e.target;\n    setFormData(prevData => ({ ...prevData, [name]: value }));\n    \n    // Clear error when user starts typing\n    if (errors[name]) {\n      setErrors(prevErrors => ({ ...prevErrors, [name]: undefined }));\n    }\n  }, [errors]);\n\n  const handleSubmit = useCallback(async (e) => {\n    e.preventDefault();\n    \n    // Validate form before submission\n    if (!validateForm()) {\n      return;\n    }\n    \n    setLoading(true);\n    \n    try {\n      const response = await fetch('/api/email', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(formData),\n      });\n\n      if (response.ok) {\n        setSuccess(true);\n        setFormData({\n          fullName: '',\n          email: '',\n          phoneNumber: '',\n          subject: '',\n          message: '',\n        });\n        \n        // Auto-hide success message after delay\n        setTimeout(() => {\n          setSuccess(false);\n        }, 4000);\n      } else {\n        // Handle non-OK responses\n        console.error('Server responded with error', await response.text());\n      }\n    } catch (err) {\n      console.error('Error submitting form:', err);\n    } finally {\n      setLoading(false);\n    }\n  }, [formData, validateForm]);\n\n  // Memoize section header content\n  const sectionHeader = useMemo(() => (\n    <div className=\"section-header\">\n      <h4 className=\"subtitle scroll-animation\" data-aos=\"fade-up\">\n        <i className=\"las la-dollar-sign\"></i> contact\n      </h4>\n      <h1 className=\"scroll-animation\" data-aos=\"fade-up\">\n        Let's Work <span>Together!</span>\n      </h1>\n    </div>\n  ), []);\n\n  return (\n    <section className=\"contact-area page-section scroll-content\" id=\"contact\">\n      <div className=\"custom-container\">\n        <div className=\"contact-content content-width\">\n          {sectionHeader}\n          <h3 className=\"scroll-animation\" data-aos=\"fade-up\"></h3>\n          <p id=\"required-msg\">* Marked fields are required to fill.</p>\n\n          <form\n            className=\"contact-form scroll-animation\"\n            data-aos=\"fade-up\"\n            onSubmit={handleSubmit}\n            noValidate\n          >\n            {success && (\n              <div\n                className=\"alert alert-success messenger-box-contact__msg\"\n                role=\"alert\"\n              >\n                Your message was sent successfully.\n              </div>\n            )}\n            <div className=\"row\">\n              <div className=\"col-md-6\">\n                <div className={`input-group ${errors.fullName ? 'has-error' : ''}`}>\n                  <label htmlFor=\"full-name\">\n                    Full Name <sup>*</sup>\n                  </label>\n                  <input\n                    type=\"text\"\n                    value={formData.fullName}\n                    onChange={handleChange}\n                    name=\"fullName\"\n                    id=\"full-name\"\n                    placeholder=\"Your Full Name\"\n                    required\n                  />\n                  {errors.fullName && <div className=\"error-message\">{errors.fullName}</div>}\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className={`input-group ${errors.email ? 'has-error' : ''}`}>\n                  <label htmlFor=\"email\">\n                    Email <sup>*</sup>\n                  </label>\n                  <input\n                    type=\"email\"\n                    value={formData.email}\n                    onChange={handleChange}\n                    name=\"email\"\n                    id=\"email\"\n                    placeholder=\"Your email address\"\n                    required\n                  />\n                  {errors.email && <div className=\"error-message\">{errors.email}</div>}\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className=\"input-group\">\n                  <label htmlFor=\"phone-number\">\n                    Phone <span>(optional)</span>\n                  </label>\n                  <input\n                    type=\"tel\"\n                    value={formData.phoneNumber}\n                    onChange={handleChange}\n                    name=\"phoneNumber\"\n                    id=\"phone-number\"\n                    placeholder=\"Your phone number\"\n                  />\n                </div>\n              </div>\n              <div className=\"col-md-6\">\n                <div className={`input-group ${errors.subject ? 'has-error' : ''}`}>\n                  <label htmlFor=\"subject\">\n                    Subject <sup>*</sup>\n                  </label>\n                  <input\n                    value={formData.subject}\n                    onChange={handleChange}\n                    type=\"text\"\n                    name=\"subject\"\n                    id=\"subject\"\n                    placeholder=\"What is this about?\"\n                    required\n                  />\n                  {errors.subject && <div className=\"error-message\">{errors.subject}</div>}\n                </div>\n              </div>\n              <div className=\"col-md-12\">\n                <div className=\"input-group\">\n                  <label htmlFor=\"message\">Message</label>\n                  <textarea\n                    value={formData.message}\n                    onChange={handleChange}\n                    name=\"message\"\n                    id=\"message\"\n                    placeholder=\"Write your message here ...\"\n                    rows=\"5\"\n                  ></textarea>\n                </div>\n              </div>\n              <div className=\"col-md-12\">\n                <div className=\"input-group submit-btn-wrap\">\n                  <button\n                    className={`theme-btn ${loading ? 'loading' : ''}`}\n                    name=\"submit\"\n                    type=\"submit\"\n                    id=\"submit-form\"\n                    disabled={loading}\n                  >\n                    {loading ? 'Sending...' : 'Send Message'}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </section>\n  );\n}\n"],"names":["Contact","useEffect","AOS","formData","setFormData","useState","success","setSuccess","loading","setLoading","errors","setErrors","validateForm","useCallback","newErrors","handleChange","e","name","value","prevData","prevErrors","handleSubmit","response","err","sectionHeader","useMemo","jsxs","jsx"],"mappings":"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"}